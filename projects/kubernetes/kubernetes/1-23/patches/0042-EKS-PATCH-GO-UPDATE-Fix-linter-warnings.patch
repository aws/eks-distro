From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Madhav Jivrajani <madhav.jiv@gmail.com>
Date: Tue, 7 Feb 2023 10:59:07 +0530
Subject: [PATCH] --EKS-PATCH-- --GO-UPDATE-- *: Fix linter warnings

Adapt to newly improved linters in golangci-lint v1.51.1

Signed-off-by: Madhav Jivrajani <madhav.jiv@gmail.com>
---
 pkg/kubelet/stats/provider.go                 |  5 -----
 .../k8s.io/component-base/metrics/metric.go   | 20 -------------------
 .../e2e/storage/vsphere/pvc_label_selector.go |  1 -
 3 files changed, 26 deletions(-)

diff --git a/pkg/kubelet/stats/provider.go b/pkg/kubelet/stats/provider.go
index 7c06a550949..5d1d5a8a7d3 100644
--- a/pkg/kubelet/stats/provider.go
+++ b/pkg/kubelet/stats/provider.go
@@ -84,7 +84,6 @@ type Provider struct {
 	podManager   kubepod.Manager
 	runtimeCache kubecontainer.RuntimeCache
 	containerStatsProvider
-	rlimitStatsProvider
 }
 
 // containerStatsProvider is an interface that provides the stats of the
@@ -97,10 +96,6 @@ type containerStatsProvider interface {
 	ImageFsDevice() (string, error)
 }
 
-type rlimitStatsProvider interface {
-	RlimitStats() (*statsapi.RlimitStats, error)
-}
-
 // RlimitStats returns base information about process count
 func (p *Provider) RlimitStats() (*statsapi.RlimitStats, error) {
 	return pidlimit.Stats()
diff --git a/staging/src/k8s.io/component-base/metrics/metric.go b/staging/src/k8s.io/component-base/metrics/metric.go
index ee87215c539..2453d909625 100644
--- a/staging/src/k8s.io/component-base/metrics/metric.go
+++ b/staging/src/k8s.io/component-base/metrics/metric.go
@@ -205,7 +205,6 @@ func (c *selfCollector) Collect(ch chan<- prometheus.Metric) {
 var noopCounterVec = &prometheus.CounterVec{}
 var noopHistogramVec = &prometheus.HistogramVec{}
 var noopGaugeVec = &prometheus.GaugeVec{}
-var noopObserverVec = &noopObserverVector{}
 
 // just use a convenience struct for all the no-ops
 var noop = &noopMetric{}
@@ -223,22 +222,3 @@ func (noopMetric) Desc() *prometheus.Desc           { return nil }
 func (noopMetric) Write(*dto.Metric) error          { return nil }
 func (noopMetric) Describe(chan<- *prometheus.Desc) {}
 func (noopMetric) Collect(chan<- prometheus.Metric) {}
-
-type noopObserverVector struct{}
-
-func (noopObserverVector) GetMetricWith(prometheus.Labels) (prometheus.Observer, error) {
-	return noop, nil
-}
-func (noopObserverVector) GetMetricWithLabelValues(...string) (prometheus.Observer, error) {
-	return noop, nil
-}
-func (noopObserverVector) With(prometheus.Labels) prometheus.Observer    { return noop }
-func (noopObserverVector) WithLabelValues(...string) prometheus.Observer { return noop }
-func (noopObserverVector) CurryWith(prometheus.Labels) (prometheus.ObserverVec, error) {
-	return noopObserverVec, nil
-}
-func (noopObserverVector) MustCurryWith(prometheus.Labels) prometheus.ObserverVec {
-	return noopObserverVec
-}
-func (noopObserverVector) Describe(chan<- *prometheus.Desc) {}
-func (noopObserverVector) Collect(chan<- prometheus.Metric) {}
diff --git a/test/e2e/storage/vsphere/pvc_label_selector.go b/test/e2e/storage/vsphere/pvc_label_selector.go
index cfe905c5816..ec48c7275e0 100644
--- a/test/e2e/storage/vsphere/pvc_label_selector.go
+++ b/test/e2e/storage/vsphere/pvc_label_selector.go
@@ -108,7 +108,6 @@ var _ = utils.SIGDescribe("PersistentVolumes [Feature:vsphere][Feature:LabelSele
 
 func testSetupVSpherePVClabelselector(c clientset.Interface, nodeInfo *NodeInfo, ns string, ssdlabels map[string]string, vvollabels map[string]string) (volumePath string, pvSsd *v1.PersistentVolume, pvcSsd *v1.PersistentVolumeClaim, pvcVvol *v1.PersistentVolumeClaim, err error) {
 	ginkgo.By("creating vmdk")
-	volumePath = ""
 	volumePath, err = nodeInfo.VSphere.CreateVolume(&VolumeOptions{}, nodeInfo.DataCenterRef)
 	if err != nil {
 		return
