From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: chenk008 <kongchen28@gmail.com>
Date: Fri, 19 Apr 2024 11:11:21 +0800
Subject: [PATCH] --EKS-PATCH-- Update
 pkg/controlplane/apiserver/config_test.go

Description:
* Fixes EtcdOptions.StorageObjectCountTracker is nil, APF estimator got ObjectCountNotFoundErr

Upstream PR, Issue, KEP, etc. links:
* This patch was initially based on cherry pick of Kubernetes commit 3212c129d6f0f933541310ef3e4881a49dfc7316
(https://github.com/kubernetes/kubernetes/pull/129469/commits/3212c129d6f0f933541310ef3e4881a49dfc7316), which is part
of PR #124223 (https://github.com/kubernetes/kubernetes/pull/124223).

If this patch is based on an upstream commit, how (if at all) do this patch and the upstream source differ?
* N/A

If this patch's changes have not been added by upstream, why not?
* N/A

Other patches related to this patch:
* EKS-PATCH-prioritize_user_EtcdOptions.StorageConfig.StorageObjectCountTracker.patch
* EKS-PATCH-Fix_StorageObjectCountTracker_is_nil,_apf_estimator_got_ObjectCountNotFoundErr.patch

Changes made to this patch after its initial creation and reasons for these changes:
* N/A

Kubernetes version this patch can be dropped:
* Likely 1.30.10 -- https://github.com/kubernetes/kubernetes/pull/129469

Co-authored-by: Paco Xu <paco.xu@daocloud.io>
---
 pkg/controlplane/apiserver/config_test.go | 28 ++++++++++++++++++++---
 1 file changed, 25 insertions(+), 3 deletions(-)

diff --git a/pkg/controlplane/apiserver/config_test.go b/pkg/controlplane/apiserver/config_test.go
index 4496bb357cb..1ceeece906e 100644
--- a/pkg/controlplane/apiserver/config_test.go
+++ b/pkg/controlplane/apiserver/config_test.go
@@ -1,6 +1,25 @@
+/*
+Copyright 2024 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
 package apiserver
 
 import (
+	"net"
+	"testing"
+
 	extensionsapiserver "k8s.io/apiextensions-apiserver/pkg/apiserver"
 	"k8s.io/apimachinery/pkg/runtime"
 	"k8s.io/apimachinery/pkg/runtime/schema"
@@ -10,8 +29,6 @@ import (
 	"k8s.io/kubernetes/pkg/controlplane/apiserver/options"
 	generatedopenapi "k8s.io/kubernetes/pkg/generated/openapi"
 	netutils "k8s.io/utils/net"
-	"net"
-	"testing"
 )
 
 func TestBuildGenericConfig(t *testing.T) {
@@ -23,7 +40,12 @@ func TestBuildGenericConfig(t *testing.T) {
 	if err != nil {
 		t.Fatalf("failed to listen on 127.0.0.1:0")
 	}
-	defer ln.Close()
+	defer func() {
+		err := ln.Close()
+		if err != nil {
+			t.Fatalf("Failed to close tcp listener: %v", err)
+		}
+	}()
 	s.Listener = ln
 	s.BindPort = ln.Addr().(*net.TCPAddr).Port
 	opts.SecureServing = s
