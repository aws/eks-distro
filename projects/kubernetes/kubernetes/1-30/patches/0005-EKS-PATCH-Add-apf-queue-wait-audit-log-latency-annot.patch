From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Harish Kuna <hakuna@amazon.com>
Date: Wed, 13 Mar 2024 21:54:59 +0000
Subject: [PATCH] --EKS-PATCH-- Add apf-queue-wait audit log latency annotation

Description:
* Backport for the apf-queue-wait audit log latency annotation to capture the latency attributed to requests from APF queue wait time.

Upstream PR, Issue, KEP, etc. links:
* Backport of https://github.com/kubernetes/kubernetes/pull/123919

If this patch is based on an upstream commit, how (if at all) do this patch and the upstream source differ?
* N/A

If this patch's changes have not been added by upstream, why not ?
* Commit has been merged upstream in version 1.31. Audit log latency annotations do not satisfy the backport criteria for active releases.

Other patches related to this patch:
* None

Changes made to this patch after its initial creation and reasons for these changes:
* None

Kubernetes version this patch can be dropped:
* 1.31 as upstream already has this commit.
---
 .../apiserver/pkg/endpoints/request/webhook_duration.go      | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/staging/src/k8s.io/apiserver/pkg/endpoints/request/webhook_duration.go b/staging/src/k8s.io/apiserver/pkg/endpoints/request/webhook_duration.go
index b7b7f897c6e..435af8e7cf1 100644
--- a/staging/src/k8s.io/apiserver/pkg/endpoints/request/webhook_duration.go
+++ b/staging/src/k8s.io/apiserver/pkg/endpoints/request/webhook_duration.go
@@ -274,6 +274,7 @@ func AuditAnnotationsFromLatencyTrackers(ctx context.Context) map[string]string
 		mutatingWebhookLatencyKey   = "apiserver.latency.k8s.io/mutating-webhook"
 		validatingWebhookLatencyKey = "apiserver.latency.k8s.io/validating-webhook"
 		decodeLatencyKey            = "apiserver.latency.k8s.io/decode-response-object"
+		apfQueueWaitLatencyKey      = "apiserver.latency.k8s.io/apf-queue-wait"
 	)
 
 	tracker, ok := LatencyTrackersFrom(ctx)
@@ -303,6 +304,8 @@ func AuditAnnotationsFromLatencyTrackers(ctx context.Context) map[string]string
 	if latency := tracker.DecodeTracker.GetLatency(); latency != 0 {
 		annotations[decodeLatencyKey] = latency.String()
 	}
-
+	if latency := tracker.APFQueueWaitTracker.GetLatency(); latency != 0 {
+		annotations[apfQueueWaitLatencyKey] = latency.String()
+	}
 	return annotations
 }
