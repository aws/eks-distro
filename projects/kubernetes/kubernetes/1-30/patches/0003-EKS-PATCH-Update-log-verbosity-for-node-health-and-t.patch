From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: torredil <torredil@amazon.com>
Date: Mon, 20 Nov 2023 17:54:16 +0000
Subject: [PATCH] --EKS-PATCH-- Update log verbosity for node health and taint
 checks

cherrypick of https://github.com/kubernetes/kubernetes/pull/121967

Signed-off-by: torredil <torredil@amazon.com>
---
 .../volume/attachdetach/reconciler/reconciler.go          | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/pkg/controller/volume/attachdetach/reconciler/reconciler.go b/pkg/controller/volume/attachdetach/reconciler/reconciler.go
index bbf33986ebb..c5090957f36 100644
--- a/pkg/controller/volume/attachdetach/reconciler/reconciler.go
+++ b/pkg/controller/volume/attachdetach/reconciler/reconciler.go
@@ -215,7 +215,9 @@ func (rc *reconciler) reconcile(ctx context.Context) {
 
 			isHealthy, err := rc.nodeIsHealthy(attachedVolume.NodeName)
 			if err != nil {
-				logger.Error(err, "Failed to get health of node", "node", klog.KRef("", string(attachedVolume.NodeName)))
+				logger.V(5).Info("Failed to get health of node",
+					"node", klog.KRef("", string(attachedVolume.NodeName)),
+					"err", err)
 			}
 
 			// Force detach volumes from unhealthy nodes after maxWaitForUnmountDuration if force detach is enabled
@@ -228,7 +230,9 @@ func (rc *reconciler) reconcile(ctx context.Context) {
 
 			hasOutOfServiceTaint, err := rc.hasOutOfServiceTaint(attachedVolume.NodeName)
 			if err != nil {
-				logger.Error(err, "Failed to get taint specs for node", "node", klog.KRef("", string(attachedVolume.NodeName)))
+				logger.V(5).Info("Failed to get taint specs for node",
+					"node", klog.KRef("", string(attachedVolume.NodeName)),
+					"err", err)
 			}
 
 			// Check whether volume is still mounted. Skip detach if it is still mounted unless we have
