From 1bb46d0f9f3db1b0a861b95a5f4d765535c78fd4 Mon Sep 17 00:00:00 2001
From: Prow Bot <prow@amazonaws.com>
Date: Thu, 23 Dec 2021 10:34:20 -0600
Subject: [PATCH] Patch golang/x/net/http/server.go for CVE-2021-44716

for more details: https://go-review.googlesource.com/c/net/+/369794

Signed-off-by: Jackson West <jgw@amazon.com>
---
 vendor/golang.org/x/net/http2/server.go | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/vendor/golang.org/x/net/http2/server.go b/vendor/golang.org/x/net/http2/server.go
index 2aa859f76f9..fcf50b08600 100644
--- a/vendor/golang.org/x/net/http2/server.go
+++ b/vendor/golang.org/x/net/http2/server.go
@@ -720,7 +720,15 @@ func (sc *serverConn) canonicalHeader(v string) string {
 		sc.canonHeader = make(map[string]string)
 	}
 	cv = http.CanonicalHeaderKey(v)
-	sc.canonHeader[v] = cv
+	// maxCachedCanonicalHeaders is an arbitrarily-chosen limit on the number of
+	// entries in the canonHeader cache. This should be larger than the number
+	// of unique, uncommon header keys likely to be sent by the peer, while not
+	// so high as to permit unreaasonable memory usage if the peer sends an unbounded
+	// number of unique header keys.
+	const maxCachedCanonicalHeaders = 32
+	if len(sc.canonHeader) < maxCachedCanonicalHeaders {
+		sc.canonHeader[v] = cv
+	}
 	return cv
 }
 
-- 
2.34.0

