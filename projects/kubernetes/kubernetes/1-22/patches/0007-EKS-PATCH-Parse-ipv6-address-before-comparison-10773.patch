From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jyoti Mahapatra <49211422+jyotimahapatra@users.noreply.github.com>
Date: Wed, 26 Jan 2022 18:38:49 -0800
Subject: --EKS-PATCH-- Parse ipv6 address before comparison (#107736)

Modified cherry-pick of upstream Kubernetes:
https://github.com/kubernetes/kubernetes/pull/107736, which is
included in Kubernetes 1.24. The difference between this patch and the
upstream change is the upstreams use of forked golang parsers, which
were not included in the minor Kubernetes version that this patch
applied to.

This fixes a bug related to ipv6 clusters, as described in Kubernetes
issue #107735 (https://github.com/kubernetes/kubernetes/issues/107735)

Signed-off-by: Jyoti Mahapatra <jyotima@amazon.com>
---
 pkg/kubelet/nodestatus/setters.go      |  2 ++
 pkg/kubelet/nodestatus/setters_test.go | 14 ++++++++++++++
 2 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/pkg/kubelet/nodestatus/setters.go b/pkg/kubelet/nodestatus/setters.go
index 0ff7f6fced9..0f4894a4a90 100644
--- a/pkg/kubelet/nodestatus/setters.go
+++ b/pkg/kubelet/nodestatus/setters.go
@@ -125,7 +125,7 @@ func NodeAddress(nodeIPs []net.IP, // typically Kubelet.nodeIPs
 
 				nodeIPTypes := make(map[v1.NodeAddressType]bool)
 				for _, nodeAddress := range cloudNodeAddresses {
-					if nodeAddress.Address == nodeIP.String() {
+					if net.ParseIP(nodeAddress.Address).Equal(nodeIP) {
 						enforcedNodeAddresses = append(enforcedNodeAddresses, v1.NodeAddress{Type: nodeAddress.Type, Address: nodeAddress.Address})
 						nodeIPTypes[nodeAddress.Type] = true
 					}
diff --git a/pkg/kubelet/nodestatus/setters_test.go b/pkg/kubelet/nodestatus/setters_test.go
index 0547446adba..64dac5eedc6 100644
--- a/pkg/kubelet/nodestatus/setters_test.go
+++ b/pkg/kubelet/nodestatus/setters_test.go
@@ -293,6 +293,20 @@ func TestNodeAddress(t *testing.T) {
 			hostnameOverride: true,
 			shouldError:      false,
 		},
+		{
+			name:   "Dual-stack cloud, with nodeIP, different IPv6 formats",
+			nodeIP: netutils.ParseIPSloppy("2600:1f14:1d4:d101::ba3d"),
+			nodeAddresses: []v1.NodeAddress{
+				{Type: v1.NodeInternalIP, Address: "10.1.1.1"},
+				{Type: v1.NodeInternalIP, Address: "2600:1f14:1d4:d101:0:0:0:ba3d"},
+				{Type: v1.NodeHostName, Address: testKubeletHostname},
+			},
+			expectedAddresses: []v1.NodeAddress{
+				{Type: v1.NodeInternalIP, Address: "2600:1f14:1d4:d101:0:0:0:ba3d"},
+				{Type: v1.NodeHostName, Address: testKubeletHostname},
+			},
+			shouldError: false,
+		},
 		{
 			name: "Dual-stack cloud, IPv4 first, no nodeIP",
 			nodeAddresses: []v1.NodeAddress{
