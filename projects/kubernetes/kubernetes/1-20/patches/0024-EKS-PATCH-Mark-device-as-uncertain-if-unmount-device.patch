From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Hemant Kumar <hekumar@redhat.com>
Date: Wed, 26 Jan 2022 07:49:49 -0500
Subject: [PATCH] --EKS-PATCH-- Mark device as uncertain if unmount device
 succeeds

Cherry-pick of upstream Kubernetes:
https://github.com/kubernetes/kubernetes/pull/107789, which is
included in Kubernetes 1.24 and cherry-picked by 1.21 - 1.23.

From the original PR description:
  If unmount device succeeds but somehow unmount operation fails
  because device was in-use elsewhere, we should mark the device
  mount as uncertain because we can't use the global mount point at
  this point.
---
 pkg/volume/util/operationexecutor/operation_generator.go | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/pkg/volume/util/operationexecutor/operation_generator.go b/pkg/volume/util/operationexecutor/operation_generator.go
index b9bf446c1cf..a61c3de0140 100644
--- a/pkg/volume/util/operationexecutor/operation_generator.go
+++ b/pkg/volume/util/operationexecutor/operation_generator.go
@@ -883,6 +883,12 @@ func (og *operationGenerator) GenerateUnmountDeviceFunc(
 		}
 		// The device is still in use elsewhere. Caller will log and retry.
 		if deviceOpened {
+			// Mark the device as uncertain, so MountDevice is called for new pods.
+			markDeviceUncertainErr := actualStateOfWorld.MarkDeviceAsUncertain(deviceToDetach.VolumeName, deviceToDetach.DevicePath, deviceMountPath)
+			if markDeviceUncertainErr != nil {
+				// There is nothing else we can do. Hope that UnmountDevice will be re-tried shortly.
+				klog.Errorf(deviceToDetach.GenerateErrorDetailed("UnmountDevice.MarkDeviceAsUncertain failed", markDeviceUncertainErr).Error())
+			}
 			return deviceToDetach.GenerateError(
 				"UnmountDevice failed",
 				goerrors.New("the device is in use when it was no longer expected to be in use"))
