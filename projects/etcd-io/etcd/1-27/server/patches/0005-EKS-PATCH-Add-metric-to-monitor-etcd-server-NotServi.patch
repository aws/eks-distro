From ffbc5880ebc2b923d7b6748d0a69282eeb72ba5b Mon Sep 17 00:00:00 2001
From: Yiqing Liu <yqliu@amazon.com>
Date: Thu, 23 May 2024 13:22:35 -0700
Subject: [PATCH] --EKS-PATCH-- Add metric to monitor etcd server NotServing
 total duration

---
 server/etcdserver/api/v3rpc/health.go  | 23 +++++++++++++++++------
 server/etcdserver/api/v3rpc/metrics.go | 10 ++++++++++
 2 files changed, 27 insertions(+), 6 deletions(-)

diff --git a/server/etcdserver/api/v3rpc/health.go b/server/etcdserver/api/v3rpc/health.go
index f58396d1c..c62673f87 100644
--- a/server/etcdserver/api/v3rpc/health.go
+++ b/server/etcdserver/api/v3rpc/health.go
@@ -15,6 +15,8 @@
 package v3rpc

 import (
+	"time"
+
 	"go.etcd.io/etcd/server/v3/etcdserver"
 	"go.uber.org/zap"
 	"google.golang.org/grpc/health"
@@ -22,7 +24,8 @@ import (
 )

 const (
-	allGRPCServices = ""
+	allGRPCServices        = ""
+	notServingReasonDefrag = "defrag"
 )

 type notifier interface {
@@ -46,6 +49,7 @@ type healthNotifier struct {
 	lg *zap.Logger

 	stopGRPCServiceOnDefrag bool
+	notServingStartTime     time.Time
 }

 func (hc *healthNotifier) defragStarted() {
@@ -58,12 +62,18 @@ func (hc *healthNotifier) defragStarted() {
 func (hc *healthNotifier) defragFinished() { hc.startServe() }

 func (hc *healthNotifier) startServe() {
-	hc.lg.Info(
-		"grpc service status changed",
-		zap.String("service", allGRPCServices),
-		zap.String("status", healthpb.HealthCheckResponse_SERVING.String()),
-	)
 	hc.hs.SetServingStatus(allGRPCServices, healthpb.HealthCheckResponse_SERVING)
+	if !hc.notServingStartTime.IsZero() {
+		notServingDuration := time.Since(hc.notServingStartTime)
+		hc.lg.Info(
+			"grpc service status changed",
+			zap.String("service", allGRPCServices),
+			zap.String("status", healthpb.HealthCheckResponse_SERVING.String()),
+			zap.Duration("not-serving-duration", notServingDuration),
+		)
+
+		gRPCNotServingTotalDurationSeconds.WithLabelValues(notServingReasonDefrag).Add(notServingDuration.Seconds())
+	}
 }

 func (hc *healthNotifier) stopServe(reason string) {
@@ -74,4 +84,5 @@ func (hc *healthNotifier) stopServe(reason string) {
 		zap.String("reason", reason),
 	)
 	hc.hs.SetServingStatus(allGRPCServices, healthpb.HealthCheckResponse_NOT_SERVING)
+	hc.notServingStartTime = time.Now()
 }
diff --git a/server/etcdserver/api/v3rpc/metrics.go b/server/etcdserver/api/v3rpc/metrics.go
index 62419d310..df3b5c51e 100644
--- a/server/etcdserver/api/v3rpc/metrics.go
+++ b/server/etcdserver/api/v3rpc/metrics.go
@@ -65,6 +65,15 @@ var (
 	},
 		[]string{"type", "request_type"},
 	)
+
+	gRPCNotServingTotalDurationSeconds = prometheus.NewCounterVec(prometheus.CounterOpts{
+		Namespace: "etcd",
+		Subsystem: "grpc_server",
+		Name:      "not_serving_duration_seconds_total",
+		Help:      "The total notServing duration from grpc health check.",
+	},
+		[]string{"reason"},
+	)
 )

 func init() {
@@ -74,4 +83,5 @@ func init() {
 	prometheus.MustRegister(clientRequests)
 	prometheus.MustRegister(throttledRequests)
 	prometheus.MustRegister(deniedRequests)
+	prometheus.MustRegister(gRPCNotServingTotalDurationSeconds)
 }
-- 
2.40.1

